# SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
sheets:
  - /org/eolang/parser/parse/wrap-method-calls.xsl
  - /org/eolang/parser/parse/const-to-dataized.xsl
  - /org/eolang/parser/parse/vars-float-up.xsl
  - /org/eolang/parser/parse/build-fqns.xsl
asserts:
  - /program[not(errors)]
  - /program/objects[count(o)=4]
  - /program/objects/o[@base='.foo' and @name='bar']/o[@base='.examples']/o[@base='.org']/o[@base='Q']
  - /program/objects/o[@name='foo']
  - /program/objects/o[@name='first']/o[@base='stdout' and @name='std']/o[@base='.x']/o[@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@base='.std']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@base='.std']/o[2][@base='.x']/o[1][@base='.^']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='Q.org.eolang.number' and @name='x']/o[@base='Q.org.eolang.bytes']/o[text()!='']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.plus']/o[1][@base='.x']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.plus']/o[2][@base='.y']/o[1][@base='.^']/o[1][@base='.^']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.std']/o[1][@base='.^']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.std']/o[2][@base='qwe']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.third']/o[1][@base='.^']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='third']/o[@base='.third']/o[2][@base='.bar']/o[@base='.examples']/o[@base='.org']/o[@base='Q']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='fourth']/o[@base='Q.org.eolang.string' and @name='inner']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='fourth']/o[@base='.inner' and @name='outer']/o[1][@base='.^']/o[1][@base='$']
  - /program/objects/o[@name='first']/o[@name='second']/o[@name='fourth']/o[@base='.inner' and @name='self']/o[1][@base='$']
  - /program/objects/o[@name='s' and @base='.plus']/o[1][not(@base) and not(@name)]/o[1][@base='.^']/o[1][@base='$']
input: |-
  +package org.examples

  # No comments.
  [x y] > first
    stdout x > std
    [std] > second
      std x > inner
      [] > third
        5 > x
        x.plus y > sum
        third bar > baz
        std qwe > closest
      [] > fourth
        "some" > inner
        ^.inner > outer
        inner > self
  foo > bar

  # Foo.
  [] > foo

  ([] (^ > x)).plus > s
